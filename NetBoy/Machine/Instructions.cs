using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NetBoy.Machine
{
    public static class Instructions
    {
        
        public static Dictionary<byte, In> Set = new Dictionary<byte, In>()
        {
            {0x00, new In(){ InstType = InType.Nop, Cycles = 1} },
            {0x01, new In(){ InstType = InType.Load16, Movement = Move.Int16ToBC, Cycles = 3} },
            {0x02, new In(){InstType = InType.None }},
            {0x03, new In(){InstType = InType.None }},
            {0x04, new In(){InstType = InType.None }},
            {0x05, new In(){InstType = InType.None }},
            {0x06, new In(){InstType = InType.None }},
            {0x07, new In(){InstType = InType.None }},
            {0x08, new In(){InstType = InType.None }},
            {0x09, new In(){InstType = InType.None }},
            {0x0A, new In(){InstType = InType.None }},
            {0x0B, new In(){InstType = InType.None }},
            {0x0C, new In(){InstType = InType.None }},
            {0x0D, new In(){InstType = InType.None }},
            {0x0E, new In(){InstType = InType.None }},
            {0x0F, new In(){InstType = InType.None }},
            {0x10, new In(){InstType = InType.None }},
            {0x11, new In(){InstType = InType.None }},
            {0x12, new In(){InstType = InType.None }},
            {0x13, new In(){InstType = InType.None }},
            {0x14, new In(){InstType = InType.None }},
            {0x15, new In(){InstType = InType.None }},
            {0x16, new In(){InstType = InType.None }},
            {0x17, new In(){InstType = InType.None }},
            {0x18, new In(){InstType = InType.None }},
            {0x19, new In(){InstType = InType.None }},
            {0x1A, new In(){InstType = InType.None }},
            {0x1B, new In(){InstType = InType.None }},
            {0x1C, new In(){InstType = InType.None }},
            {0x1D, new In(){InstType = InType.None }},
            {0x1E, new In(){InstType = InType.None }},
            {0x1F, new In(){InstType = InType.None }},
            {0x20, new In(){InstType = InType.None }},
            {0x21, new In(){InstType = InType.None }},
            {0x22, new In(){InstType = InType.None }},
            {0x23, new In(){InstType = InType.None }},
            {0x24, new In(){InstType = InType.None }},
            {0x25, new In(){InstType = InType.None }},
            {0x26, new In(){InstType = InType.None }},
            {0x27, new In(){InstType = InType.None }},
            {0x28, new In(){InstType = InType.None }},
            {0x29, new In(){InstType = InType.None }},
            {0x2A, new In(){InstType = InType.None }},
            {0x2B, new In(){InstType = InType.None }},
            {0x2C, new In(){InstType = InType.None }},
            {0x2D, new In(){InstType = InType.None }},
            {0x2E, new In(){InstType = InType.None }},
            {0x2F, new In(){InstType = InType.None }},
            {0x30, new In(){InstType = InType.None }},
            {0x31, new In(){InstType = InType.None }},
            {0x32, new In(){InstType = InType.None }},
            {0x33, new In(){InstType = InType.None }},
            {0x34, new In(){InstType = InType.None }},
            {0x35, new In(){InstType = InType.None }},
            {0x36, new In(){InstType = InType.None }},
            {0x37, new In(){InstType = InType.None }},
            {0x38, new In(){InstType = InType.None }},
            {0x39, new In(){InstType = InType.None }},
            {0x3A, new In(){InstType = InType.None }},
            {0x3B, new In(){InstType = InType.None }},
            {0x3C, new In(){InstType = InType.None }},
            {0x3D, new In(){InstType = InType.None }},
            {0x3E, new In(){InstType = InType.None }},
            {0x3F, new In(){InstType = InType.None }},
            {0x40, new In(){InstType = InType.None }},
            {0x41, new In(){InstType = InType.None }},
            {0x42, new In(){InstType = InType.None }},
            {0x43, new In(){InstType = InType.None }},
            {0x44, new In(){InstType = InType.None }},
            {0x45, new In(){InstType = InType.None }},
            {0x46, new In(){InstType = InType.None }},
            {0x47, new In(){InstType = InType.None }},
            {0x48, new In(){InstType = InType.None }},
            {0x49, new In(){InstType = InType.None }},
            {0x4A, new In(){InstType = InType.None }},
            {0x4B, new In(){InstType = InType.None }},
            {0x4C, new In(){InstType = InType.None }},
            {0x4D, new In(){InstType = InType.None }},
            {0x4E, new In(){InstType = InType.None }},
            {0x4F, new In(){InstType = InType.None }},
            {0x50, new In(){InstType = InType.None }},
            {0x51, new In(){InstType = InType.None }},
            {0x52, new In(){InstType = InType.None }},
            {0x53, new In(){InstType = InType.None }},
            {0x54, new In(){InstType = InType.None }},
            {0x55, new In(){InstType = InType.None }},
            {0x56, new In(){InstType = InType.None }},
            {0x57, new In(){InstType = InType.None }},
            {0x58, new In(){InstType = InType.None }},
            {0x59, new In(){InstType = InType.None }},
            {0x5A, new In(){InstType = InType.None }},
            {0x5B, new In(){InstType = InType.None }},
            {0x5C, new In(){InstType = InType.None }},
            {0x5D, new In(){InstType = InType.None }},
            {0x5E, new In(){InstType = InType.None }},
            {0x5F, new In(){InstType = InType.None }},
            {0x60, new In(){InstType = InType.None }},
            {0x61, new In(){InstType = InType.None }},
            {0x62, new In(){InstType = InType.None }},
            {0x63, new In(){InstType = InType.None }},
            {0x64, new In(){InstType = InType.None }},
            {0x65, new In(){InstType = InType.None }},
            {0x66, new In(){InstType = InType.None }},
            {0x67, new In(){InstType = InType.None }},
            {0x68, new In(){InstType = InType.None }},
            {0x69, new In(){InstType = InType.None }},
            {0x6A, new In(){InstType = InType.None }},
            {0x6B, new In(){InstType = InType.None }},
            {0x6C, new In(){InstType = InType.None }},
            {0x6D, new In(){InstType = InType.None }},
            {0x6E, new In(){InstType = InType.None }},
            {0x6F, new In(){InstType = InType.None }},
            {0x70, new In(){InstType = InType.None }},
            {0x71, new In(){InstType = InType.None }},
            {0x72, new In(){InstType = InType.None }},
            {0x73, new In(){InstType = InType.None }},
            {0x74, new In(){InstType = InType.None }},
            {0x75, new In(){InstType = InType.None }},
            {0x76, new In(){InstType = InType.None }},
            {0x77, new In(){InstType = InType.None }},
            {0x78, new In(){InstType = InType.None }},
            {0x79, new In(){InstType = InType.None }},
            {0x7A, new In(){InstType = InType.None }},
            {0x7B, new In(){InstType = InType.None }},
            {0x7C, new In(){InstType = InType.None }},
            {0x7D, new In(){InstType = InType.None }},
            {0x7E, new In(){InstType = InType.None }},
            {0x7F, new In(){InstType = InType.None }},
            {0x80, new In(){InstType = InType.None }},
            {0x81, new In(){InstType = InType.None }},
            {0x82, new In(){InstType = InType.None }},
            {0x83, new In(){InstType = InType.None }},
            {0x84, new In(){InstType = InType.None }},
            {0x85, new In(){InstType = InType.None }},
            {0x86, new In(){InstType = InType.None }},
            {0x87, new In(){InstType = InType.None }},
            {0x88, new In(){InstType = InType.None }},
            {0x89, new In(){InstType = InType.None }},
            {0x8A, new In(){InstType = InType.None }},
            {0x8B, new In(){InstType = InType.None }},
            {0x8C, new In(){InstType = InType.None }},
            {0x8D, new In(){InstType = InType.None }},
            {0x8E, new In(){InstType = InType.None }},
            {0x8F, new In(){InstType = InType.None }},
            {0x90, new In(){InstType = InType.None }},
            {0x91, new In(){InstType = InType.None }},
            {0x92, new In(){InstType = InType.None }},
            {0x93, new In(){InstType = InType.None }},
            {0x94, new In(){InstType = InType.None }},
            {0x95, new In(){InstType = InType.None }},
            {0x96, new In(){InstType = InType.None }},
            {0x97, new In(){InstType = InType.None }},
            {0x98, new In(){InstType = InType.None }},
            {0x99, new In(){InstType = InType.None }},
            {0x9A, new In(){InstType = InType.None }},
            {0x9B, new In(){InstType = InType.None }},
            {0x9C, new In(){InstType = InType.None }},
            {0x9D, new In(){InstType = InType.None }},
            {0x9E, new In(){InstType = InType.None }},
            {0x9F, new In(){InstType = InType.None }},
            {0xA0, new In(){InstType = InType.None }},
            {0xA1, new In(){InstType = InType.None }},
            {0xA2, new In(){InstType = InType.None }},
            {0xA3, new In(){InstType = InType.None }},
            {0xA4, new In(){InstType = InType.None }},
            {0xA5, new In(){InstType = InType.None }},
            {0xA6, new In(){InstType = InType.None }},
            {0xA7, new In(){InstType = InType.None }},
            {0xA8, new In(){InstType = InType.None }},
            {0xA9, new In(){InstType = InType.None }},
            {0xAA, new In(){InstType = InType.None }},
            {0xAB, new In(){InstType = InType.None }},
            {0xAC, new In(){InstType = InType.None }},
            {0xAD, new In(){InstType = InType.None }},
            {0xAE, new In(){InstType = InType.None }},
            {0xAF, new In(){InstType = InType.None }},
            {0xB0, new In(){InstType = InType.None }},
            {0xB1, new In(){InstType = InType.None }},
            {0xB2, new In(){InstType = InType.None }},
            {0xB3, new In(){InstType = InType.None }},
            {0xB4, new In(){InstType = InType.None }},
            {0xB5, new In(){InstType = InType.None }},
            {0xB6, new In(){InstType = InType.None }},
            {0xB7, new In(){InstType = InType.None }},
            {0xB8, new In(){InstType = InType.None }},
            {0xB9, new In(){InstType = InType.None }},
            {0xBA, new In(){InstType = InType.None }},
            {0xBB, new In(){InstType = InType.None }},
            {0xBC, new In(){InstType = InType.None }},
            {0xBD, new In(){InstType = InType.None }},
            {0xBE, new In(){InstType = InType.None }},
            {0xBF, new In(){InstType = InType.None }},
            {0xC0, new In(){InstType = InType.None }},
            {0xC1, new In(){InstType = InType.None }},
            {0xC2, new In(){InstType = InType.None }},
            {0xC3, new In(){InstType = InType.Jump16 }},
            {0xC4, new In(){InstType = InType.None }},
            {0xC5, new In(){InstType = InType.None }},
            {0xC6, new In(){InstType = InType.None }},
            {0xC7, new In(){InstType = InType.None }},
            {0xC8, new In(){InstType = InType.None }},
            {0xC9, new In(){InstType = InType.None }},
            {0xCA, new In(){InstType = InType.None }},                   
            {0xCD, new In(){InstType = InType.None }},
            {0xCE, new In(){InstType = InType.None }},
            {0xCF, new In(){InstType = InType.None }},
            {0xD0, new In(){InstType = InType.None }},
            {0xD1, new In(){InstType = InType.None }},
            {0xD2, new In(){InstType = InType.None }},
            {0xD3, new In(){InstType = InType.None }},
            {0xD5, new In(){InstType = InType.None }},
            {0xD6, new In(){InstType = InType.None }},
            {0xD7, new In(){InstType = InType.None }},
            {0xD8, new In(){InstType = InType.None }},
            {0xD9, new In(){InstType = InType.None }},
            {0xDA, new In(){InstType = InType.None }},          
            {0xDC, new In(){InstType = InType.None }},            
            {0xDE, new In(){InstType = InType.None }},
            {0xDF, new In(){InstType = InType.None }},
            {0xE0, new In(){InstType = InType.None }},
            {0xE1, new In(){InstType = InType.None }},
            {0xE2, new In(){InstType = InType.None }},                    
            {0xE5, new In(){InstType = InType.None }},
            {0xE6, new In(){InstType = InType.None }},
            {0xE7, new In(){InstType = InType.None }},
            {0xE8, new In(){InstType = InType.None }},
            {0xE9, new In(){InstType = InType.None }},
            {0xEA, new In(){InstType = InType.None }},          
            {0xEE, new In(){InstType = InType.None }},
            {0xEF, new In(){InstType = InType.None }},
            {0xF0, new In(){InstType = InType.None }},
            {0xF1, new In(){InstType = InType.None }},
            {0xF2, new In(){InstType = InType.None }},
            {0xF3, new In(){InstType = InType.None }},          
            {0xF5, new In(){InstType = InType.None }},
            {0xF6, new In(){InstType = InType.None }},
            {0xF7, new In(){InstType = InType.None }},
            {0xF8, new In(){InstType = InType.None }},
            {0xF9, new In(){InstType = InType.None }},
            {0xFA, new In(){InstType = InType.None }},
            {0xFB, new In(){InstType = InType.None }},          
            {0xFE, new In(){InstType = InType.None }},
            {0xFF, new In(){InstType = InType.None }},

        };
        public struct In
        {
            public InType InstType;
            public Move Movement;
            public Register R1;
            public Register R2;
            public Cond Con;
            public ushort Parameter;
            public int Cycles;
        }
        public enum Move
        {
            Int16ToBC,

        }

        public enum Register
        {
            None,
            A,
            F,
            B,       
            C,
            D,
            E,
            H,
            L,
            AF,
            BC,
            DE,
            HL,
            SP,
            PC
        }

        public enum Cond
        {
            None,
            CT_NZ,
            CT_Z,
            CT_NC,
            CT_C
        }

       public enum InType
        {
            ///<summary> Nothing or Not Implemented</summary>
            None,
            ///<summary> No Operation</summary>
            Nop,
            ///<summary> No Operation</summary>
            Halt,
            Stop,
            Di, //disable interrupts
            Ei, //enable interrupts
            IN_CCF,
            IN_SCF,
            ///<summary> Jumps to location - 16bit </summary>
            Jump16,
            IN_CALL,
            IN_RET,
            IN_RETI,
            IN_RST,
            IN_JR,
            ///<summary> Load Instruction - 8 Bit </summary>
            Load,
            ///<summary> Load Instruction - 16 Bit</summary>
            Load16,
            IN_LDI,
            IN_LDD,
            IN_PUSH,
            IN_POP,
            IN_ADD, 
            IN_SUB, 
            IN_ADC, 
            IN_SBC, 
            IN_AND, 
            IN_XOR, 
            IN_OR,  
            IN_CP,  
            IN_INC, 
            IN_DEC, 
            IN_DAA, 
            IN_CPL, 
            IN_RLCA,
            IN_RLA,
            IN_RRCA,
            IN_RRA,
            IN_RLC,
            IN_RL,
            IN_RRC,
            IN_RR,
            IN_SLA,
            IN_SWAP,
            IN_SRA,
            IN_SRL,
            IN_BIT,
            IN_SET,
            IN_RES
        }

                
     

    }
}
